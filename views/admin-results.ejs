<!-- admin-results.ejs - Game Results Management -->
<div class="admin-results-container">
    <div class="results-header">
        <div class="header-content">
            <h1>üèà Game Results Management</h1>
            <div class="week-info">
                <span class="current-week">Week <%= week %></span>
                <% if (weekLocked) { %>
                    <span class="status-badge locked">üîí Week Locked</span>
                <% } else { %>
                    <span class="status-badge open">‚è∞ Picks Open</span>
                <% } %>
            </div>
        </div>

        <div class="header-actions">
            <select id="weekSelector" class="week-selector">
                <% allWeeks.forEach(w => { %>
                    <option value="<%= w %>" <%= w === week ? 'selected' : '' %>>Week <%= w %></option>
                <% }); %>
            </select>

            <button id="processEliminations" class="btn btn-primary">
                ‚ö° Process Winning Teams
            </button>

            <button id="clearWeek" class="btn btn-danger">
                üóëÔ∏è Clear Week
            </button>
        </div>
    </div>

    <div class="games-section">
        <div class="section-header">
            <h2>Week <%= week %> Games</h2>
            <div class="games-summary">
                <span class="game-count"><%= games.length %> Games</span>
                <span class="results-count">
          <%= games.filter(g => g.result && g.result.winner).length %> Results Set
        </span>
            </div>
        </div>

        <div class="games-grid">
            <% games.forEach(game => { %>
                <div class="game-card <%= game.result && game.result.winner ? 'has-result' : '' %>"
                     data-game-key="<%= game.gameKey %>">

                    <div class="game-header">
                        <div class="game-time">
                            <div class="date"><%= game.formattedTime.date %></div>
                            <div class="time"><%= game.formattedTime.time %> ET</div>
                        </div>

                        <% if (game.result && game.result.winner) { %>
                            <div class="result-status">
                                <span class="status-icon">‚úÖ</span>
                                <span>Result Set</span>
                            </div>
                        <% } else { %>
                            <div class="result-status pending">
                                <span class="status-icon">‚è≥</span>
                                <span>Pending</span>
                            </div>
                        <% } %>
                    </div>

                    <div class="matchup">
                        <div class="team away-team <%= game.result && game.result.winner === game.away ? 'winner' : '' %>">
                            <img src="<%= game.awayTeam.logo %>" alt="<%= game.awayTeam.fullName %>" class="team-logo">
                            <div class="team-info">
                                <div class="team-name"><%= game.away %></div>
                                <div class="team-city">@ <%= game.homeTeam.city %></div>
                            </div>
                            <div class="pick-count">
                                <span class="count"><%= game.pickCounts.away %></span>
                                <span class="label">picks</span>
                            </div>
                            <% if (!game.result || !game.result.winner) { %>
                                <button class="winner-btn" data-team="<%= game.away %>" data-game="<%= game.gameKey %>">
                                    Mark Winner
                                </button>
                            <% } %>
                        </div>

                        <div class="vs-divider">@</div>

                        <div class="team home-team <%= game.result && game.result.winner === game.home ? 'winner' : '' %>">
                            <img src="<%= game.homeTeam.logo %>" alt="<%= game.homeTeam.fullName %>" class="team-logo">
                            <div class="team-info">
                                <div class="team-name"><%= game.home %></div>
                                <div class="team-city"><%= game.homeTeam.city %></div>
                            </div>
                            <div class="pick-count">
                                <span class="count"><%= game.pickCounts.home %></span>
                                <span class="label">picks</span>
                            </div>
                            <% if (!game.result || !game.result.winner) { %>
                                <button class="winner-btn" data-team="<%= game.home %>" data-game="<%= game.gameKey %>">
                                    Mark Winner
                                </button>
                            <% } %>
                        </div>
                    </div>

                    <% if (game.result && game.result.winner) { %>
                        <div class="result-summary">
                            <strong><%= game.result.winner %></strong> wins
                            <span class="timestamp">
                Set <%= new Date(game.result.timestamp).toLocaleString() %>
              </span>
                        </div>
                    <% } %>
                </div>
            <% }); %>
        </div>
    </div>

    <!-- Results Summary Modal -->
    <div id="eliminationModal" class="modal" style="display: none;">
        <div class="modal-content">
            <div class="modal-header">
                <h3>üéØ Elimination Results</h3>
                <button class="modal-close">&times;</button>
            </div>
            <div class="modal-body">
                <div id="eliminationResults"></div>
            </div>
        </div>
    </div>

    <!-- Loading Spinner -->
    <div id="loadingSpinner" class="loading-spinner" style="display: none;">
        <div class="spinner"></div>
        <div>Processing...</div>
    </div>

    <div class="admin-actions">
        <a href="/admin" class="btn btn-outline">‚Üê Back to Admin</a>
    </div>
</div>

<!-- Week data for JS -->
<script type="application/json" id="weekData"><%= JSON.stringify(week) %></script>

<style>
    .admin-results-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 30px 20px;
    }

    .results-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 40px;
        padding: 25px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 15px;
        color: white;
    }

    .header-content h1 {
        margin: 0 0 10px 0;
        font-size: 2rem;
        font-weight: 800;
    }

    .week-info {
        display: flex;
        gap: 15px;
        align-items: center;
    }

    .current-week {
        font-size: 1.2rem;
        font-weight: 600;
    }

    .status-badge {
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.875rem;
        font-weight: 600;
    }

    .status-badge.locked {
        background: rgba(239, 68, 68, 0.2);
        border: 1px solid rgba(239, 68, 68, 0.3);
    }

    .status-badge.open {
        background: rgba(34, 197, 94, 0.2);
        border: 1px solid rgba(34, 197, 94, 0.3);
    }

    .header-actions {
        display: flex;
        gap: 15px;
        align-items: center;
    }

    .week-selector {
        padding: 10px 15px;
        border: 1px solid rgba(255,255,255,0.3);
        border-radius: 8px;
        background: rgba(255,255,255,0.1);
        color: white;
        font-weight: 600;
    }

    .week-selector option {
        background: #4c51bf;
        color: white;
    }

    .btn {
        padding: 10px 20px;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

    .btn-primary {
        background: #10b981;
        color: white;
    }

    .btn-primary:hover {
        background: #059669;
        transform: translateY(-1px);
    }

    .btn-danger {
        background: #ef4444;
        color: white;
    }

    .btn-danger:hover {
        background: #dc2626;
        transform: translateY(-1px);
    }

    .btn-outline {
        background: transparent;
        color: #4c51bf;
        border: 2px solid #4c51bf;
    }

    .btn-outline:hover {
        background: #4c51bf;
        color: white;
    }

    .section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
    }

    .section-header h2 {
        font-size: 1.5rem;
        font-weight: 700;
        color: #1f2937;
    }

    .games-summary {
        display: flex;
        gap: 20px;
        font-size: 0.875rem;
        color: #6b7280;
    }

    .games-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(450px, 1fr));
        gap: 25px;
        margin-bottom: 40px;
    }

    .game-card {
        background: white;
        border: 2px solid #e5e7eb;
        border-radius: 15px;
        padding: 20px;
        transition: all 0.3s ease;
    }

    .game-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 25px rgba(0,0,0,0.1);
    }

    .game-card.has-result {
        border-color: #10b981;
        background: #f0fdf4;
    }

    .game-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 1px solid #e5e7eb;
    }

    .game-time {
        text-align: center;
    }

    .game-time .date {
        font-weight: 600;
        color: #374151;
    }

    .game-time .time {
        font-size: 0.875rem;
        color: #6b7280;
    }

    .result-status {
        display: flex;
        align-items: center;
        gap: 6px;
        font-size: 0.875rem;
        font-weight: 600;
    }

    .result-status.pending {
        color: #d97706;
    }

    .result-status:not(.pending) {
        color: #10b981;
    }

    .matchup {
        display: grid;
        grid-template-columns: 1fr auto 1fr;
        gap: 15px;
        align-items: center;
        margin-bottom: 15px;
    }

    .team {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 10px;
        padding: 15px;
        border: 2px solid #e5e7eb;
        border-radius: 12px;
        transition: all 0.3s ease;
        position: relative;
    }

    .team.winner {
        border-color: #10b981;
        background: #f0fdf4;
    }

    .team-logo {
        width: 40px;
        height: 40px;
        object-fit: contain;
    }

    .team-info {
        text-align: center;
    }

    .team-name {
        font-weight: 700;
        font-size: 1rem;
        color: #1f2937;
    }

    .team-city {
        font-size: 0.75rem;
        color: #6b7280;
    }

    .pick-count {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 2px;
    }

    .pick-count .count {
        font-size: 1.5rem;
        font-weight: 800;
        color: #4c51bf;
    }

    .pick-count .label {
        font-size: 0.75rem;
        color: #6b7280;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .winner-btn {
        padding: 8px 16px;
        background: #4c51bf;
        color: white;
        border: none;
        border-radius: 6px;
        font-size: 0.875rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .winner-btn:hover {
        background: #4338ca;
        transform: translateY(-1px);
    }

    .vs-divider {
        font-size: 1.2rem;
        font-weight: 700;
        color: #6b7280;
        text-align: center;
    }

    .result-summary {
        text-align: center;
        padding: 12px;
        background: #f0fdf4;
        border: 1px solid #10b981;
        border-radius: 8px;
        color: #065f46;
    }

    .timestamp {
        display: block;
        font-size: 0.75rem;
        color: #6b7280;
        margin-top: 4px;
    }

    /* Modal Styles */
    .modal {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0,0,0,0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
    }

    .modal-content {
        background: white;
        border-radius: 15px;
        max-width: 500px;
        width: 90%;
        max-height: 80vh;
        overflow-y: auto;
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 20px;
        border-bottom: 1px solid #e5e7eb;
    }

    .modal-header h3 {
        margin: 0;
        font-size: 1.25rem;
        font-weight: 700;
    }

    .modal-close {
        background: none;
        border: none;
        font-size: 1.5rem;
        cursor: pointer;
        color: #6b7280;
    }

    .modal-body {
        padding: 20px;
    }

    /* Loading Spinner */
    .loading-spinner {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0,0,0,0.5);
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        z-index: 1001;
        color: white;
        font-weight: 600;
    }

    .spinner {
        width: 40px;
        height: 40px;
        border: 4px solid rgba(255,255,255,0.3);
        border-top: 4px solid white;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        margin-bottom: 15px;
    }

    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    .admin-actions {
        text-align: center;
        margin-top: 40px;
        padding-top: 30px;
        border-top: 1px solid #e5e7eb;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
        .results-header {
            flex-direction: column;
            gap: 20px;
            text-align: center;
        }

        .header-actions {
            flex-wrap: wrap;
            justify-content: center;
        }

        .games-grid {
            grid-template-columns: 1fr;
        }

        .matchup {
            grid-template-columns: 1fr;
            gap: 10px;
        }

        .vs-divider {
            order: -1;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const weekSelector = document.getElementById('weekSelector');
        const processBtn = document.getElementById('processEliminations');
        const clearBtn = document.getElementById('clearWeek');
        const modal = document.getElementById('eliminationModal');
        const spinner = document.getElementById('loadingSpinner');
        const WEEK = JSON.parse(document.getElementById('weekData').textContent);
        const selections = {}; // { gameKey: team }

        // Week selector change
        weekSelector.addEventListener('change', function() {
            const newWeek = this.value;
            window.location.href = `/admin/results?week=${newWeek}`;
        });

        // Winner selection (local only)
        document.querySelectorAll('.winner-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                const team = this.dataset.team;
                const gameKey = this.dataset.game;
                // store selection
                selections[gameKey] = team;
                // update UI highlight within this game card
                const card = this.closest('.game-card');
                if (card) {
                    card.querySelectorAll('.team').forEach(t => t.classList.remove('winner'));
                    const teamEl = this.closest('.team');
                    if (teamEl) teamEl.classList.add('winner');
                    const status = card.querySelector('.result-status');
                    if (status) {
                        status.classList.remove('pending');
                        status.innerHTML = '<span class="status-icon">‚ú≥Ô∏è</span><span>Selected</span>';
                    }
                }
            });
        });

        // Process all winning teams (save in bulk, then eliminate)
        processBtn.addEventListener('click', async function() {
            const count = Object.keys(selections).length;
            if (!confirm(`Process winning teams for Week ${WEEK}?${count ? ' This will save ' + count + ' selection(s) and eliminate losing picks.' : ''}`)) return;
            try {
                showSpinner();
                // Save winners in bulk first
                await fetch('/admin/results/set-winners-bulk', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                    body: `week=${encodeURIComponent(WEEK)}&winners=${encodeURIComponent(JSON.stringify(selections))}`
                });
                // Then process eliminations
                const response = await fetch('/admin/results/process-eliminations', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                    body: `week=${encodeURIComponent(WEEK)}`
                });
                const result = await response.json();
                if (result.success) {
                    showEliminationResults(result);
                } else {
                    alert('Error: ' + result.error);
                }
            } catch (error) {
                alert('Error processing: ' + error.message);
            } finally {
                hideSpinner();
            }
        });

        // Clear week
        clearBtn.addEventListener('click', async function() {
            if (!confirm(`Clear all results for Week ${WEEK}? This cannot be undone!`)) return;

            try {
                showSpinner();
                const response = await fetch('/admin/results/clear-week', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                    body: `week=${WEEK}`
                });

                const result = await response.json();

                if (result.success) {
                    location.reload();
                } else {
                    alert('Error: ' + result.error);
                }
            } catch (error) {
                alert('Error clearing week: ' + error.message);
            } finally {
                hideSpinner();
            }
        });

        // Modal functions
        function showEliminationResults(result) {
            const resultsDiv = document.getElementById('eliminationResults');

            let html = `
      <div class="elimination-summary">
        <h4>üìä Week ${WEEK} Results</h4>
        <p><strong>${result.eliminated}</strong> players eliminated</p>
      </div>
    `;

            if (result.games && result.games.length > 0) {
                html += '<div class="game-results">';
                result.games.forEach(game => {
                    html += `
          <div class="game-result">
            <strong>${game.matchup}</strong><br>
            Winner: ${game.winner}<br>
            <span class="eliminated-count">${game.eliminated} players eliminated</span>
          </div>
        `;
                });
                html += '</div>';
            }

            resultsDiv.innerHTML = html;
            modal.style.display = 'flex';
        }

        // Modal close
        document.querySelector('.modal-close').addEventListener('click', () => {
            modal.style.display = 'none';
        });

        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                modal.style.display = 'none';
            }
        });

        // Spinner functions
        function showSpinner() {
            spinner.style.display = 'flex';
        }

        function hideSpinner() {
            spinner.style.display = 'none';
        }
    });
</script>